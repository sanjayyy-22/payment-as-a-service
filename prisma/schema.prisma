// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GatewayType{
  PADDLE
  LEMONSQUEEZY
  PAYPAL
}

enum Role{
  CUSTOMER
  MERCHANT
}

model User{
  id String @id @default(uuid())
  email String @unique
  name String?
  city String?
  region String?
  password String
  role Role @default(CUSTOMER)
  createdAt DateTime @default(now())
  externalCustomerId ExternalCustomer[]
  transactions      Transactions[]
  payment Payment[]
}

model ExternalCustomer{
  id String @id @default(uuid())
  userId String
  provider GatewayType
  externalId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, externalId])
}

model Payment{
  id String @id @default(uuid())
  customerId String
  userId String
  amount Float
  currency String
  status String
  provider GatewayType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  transaction Transactions[]
}

model Transactions{
  id String @id @default(uuid())
  userId String
  paymentId String
  provider GatewayType
  amount Float
  status String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  payment Payment @relation(fields: [paymentId], references: [id])
}